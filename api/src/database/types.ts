/* tslint:disable */


/**
 * AUTO-GENERATED FILE @ 2020-07-29 19:17:01 - DO NOT EDIT!
 *
 * This file was automatically generated by schemats v.3.0.3
 * $ schemats generate -c mysql://username:password@127.0.0.1:3309/paypay -t assignment -t knex_migrations -t knex_migrations_lock -t review -t user -s paypay
 *
 */

export type enum_status = 'PENDING' | 'COMPLETED';
export type enum_userType = 'EMPLOYEE' | 'ADMIN';

export namespace assignmentFields {
    export type id = number;
    export type userId = number | null;
    export type revieweeId = number | null;
    export type status = enum_status;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface assignment {
    id: assignmentFields.id;
    userId: assignmentFields.userId;
    revieweeId: assignmentFields.revieweeId;
    status: assignmentFields.status;
    createdAt: assignmentFields.createdAt;
    updatedAt: assignmentFields.updatedAt;

}

export namespace knex_migrationsFields {
    export type id = number;
    export type name = string | null;
    export type batch = number | null;
    export type migration_time = Date;

}

export interface knex_migrations {
    id: knex_migrationsFields.id;
    name: knex_migrationsFields.name;
    batch: knex_migrationsFields.batch;
    migration_time: knex_migrationsFields.migration_time;

}

export namespace knex_migrations_lockFields {
    export type index = number;
    export type is_locked = number | null;

}

export interface knex_migrations_lock {
    index: knex_migrations_lockFields.index;
    is_locked: knex_migrations_lockFields.is_locked;

}

export namespace reviewFields {
    export type id = number;
    export type assignmentId = number | null;
    export type comment = string | null;
    export type attitude = number;
    export type communication = number;
    export type growth = number;
    export type dependability = number;
    export type productivity = number;
    export type initiative = number;
    export type innovation = number;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface review {
    id: reviewFields.id;
    assignmentId: reviewFields.assignmentId;
    comment: reviewFields.comment;
    attitude: reviewFields.attitude;
    communication: reviewFields.communication;
    growth: reviewFields.growth;
    dependability: reviewFields.dependability;
    productivity: reviewFields.productivity;
    initiative: reviewFields.initiative;
    innovation: reviewFields.innovation;
    createdAt: reviewFields.createdAt;
    updatedAt: reviewFields.updatedAt;

}

export namespace userFields {
    export type id = number;
    export type firstName = string;
    export type lastName = string;
    export type email = string;
    export type password = string | null;
    export type avatar = string | null;
    export type userType = enum_userType;
    export type createdAt = Date;
    export type updatedAt = Date;
    export type address = string | null;
    export type phone = string | null;
    export type mobilePhone = string | null;
    export type birthday = Date | null;

}

export interface user {
    id: userFields.id;
    firstName: userFields.firstName;
    lastName: userFields.lastName;
    email: userFields.email;
    password: userFields.password;
    avatar: userFields.avatar;
    userType: userFields.userType;
    createdAt: userFields.createdAt;
    updatedAt: userFields.updatedAt;
    address: userFields.address;
    phone: userFields.phone;
    mobilePhone: userFields.mobilePhone;
    birthday: userFields.birthday;

}
